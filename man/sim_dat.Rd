% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dat_sim.R
\name{sim_dat}
\alias{sim_dat}
\alias{sim_dat_common}
\alias{sim_dat_staggered}
\title{Simulate data}
\usage{
sim_dat(
  N = 1000,
  Time = 15,
  beta = 1,
  gamma = 0.7,
  seed = NULL,
  prob_treat = 0.25,
  as_mdd = FALSE
)

sim_dat_common(
  N = 1000,
  Time = 10,
  timing_treatment = 2:Time,
  beta = 1,
  seed = NULL,
  perc_treat = 0.25,
  as_mdd = FALSE
)

sim_dat_staggered(
  N = 1000,
  Time = 15,
  beta = 1,
  gamma = 0,
  seed = NULL,
  perc_never = 0.2,
  perc_treat = 0.8,
  perc_always = 1 - perc_treat - perc_never,
  timing_treatment = 2:Time,
  trend_diff = 0,
  as_mdd = FALSE
)
}
\arguments{
\item{N}{number of distinct units}

\item{Time}{number of distinct time}

\item{beta}{coef}

\item{gamma}{To generate the series \code{y_asym}, which has longer dynamics.
Gamma is the coefficients for observations that were not treated (0) the previous period,
while the standard beta will apply for values currently treated.}

\item{seed}{seed}

\item{prob_treat}{Probability of treatment}

\item{as_mdd}{Should output object be formatted of class mdd? Default is \code{FALSE} for now.}

\item{timing_treatment}{\emph{Staggered:} In what periods can treatment start?}

\item{perc_never, perc_always, perc_treat}{\emph{Staggered:} Percentage of (during-sample) treated, never and always}

\item{trend_diff}{differential trend}
}
\description{
Simulates data with common treatment date (\code{sim_dat_common}), staggered date (\code{sim_staggered}) or
reversible treatment, i.e. units might loose their treatment status (\code{sim_dat}).
}
\examples{
## Standard 2 x 2: 2 groups, 2 time periods
dat_DiD_1 <- sim_dat_staggered(Time=2, timing_treatment=2)
DD_manu(data=dat_DiD_1)

## estimate with panel
library(lfe)
felm(y~tr|unit+Time, data=dat_DiD_1)

## Long 2 x 2: two  groups, 5 before, 5 after
dat_DiD_2 <- sim_dat_staggered(Time=10, timing_treatment=5)
felm(y~tr|unit+Time, data=dat_DiD_2)

## Did with variation in treatment
dat_DiD_3 <- sim_dat_staggered(Time=10, timing_treatment=c(2, 10))
}
